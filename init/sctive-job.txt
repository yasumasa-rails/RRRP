https://qiita.com/jiggaman0412/items/4e7f66f7c237f3d1e945
brew install redis
gem sidekiq

config/sidekiq.yml
:concurrency: 25
:pidfile: ./tmp/pids/sidekiq.pid
:logfile: ./log/sidekiq.log
:queues:
 - default
=> concurrencyは同時実行数だが、sidekiq自身で一つカウントするらしい。

config/application.rb
# ActiveJobがSidekiqを使うことを宣言
config.active_job.queue_adapter = :sidekiq
bash
bundle exec rails g job My
my_job.rb
queue_as :default

def perform(message)
 # ジョブの実行時刻を記録します
 p Time.now
end
start_controller.rb
# CSRF対策がされてるので、その回避のため
protect_from_forgery :except => [:run]

def run
 # 即時実行
 MyJob.perform_later('Task execute')
 # 時間置き実行
 MyJob.set(wait: 3.second).perform_later('Task execute')

 render plain: 'success'
end
=> perform_laterメソッドはJobのpeformメソッドを呼び出します。

routes.rb
post 'start/run'