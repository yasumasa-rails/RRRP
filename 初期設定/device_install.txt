bundle install

以下の行を Gemfile に追加

gem 'devise'

そして、bundle install を実行。

$ rails g devise:install

と叩く。
すると以下のようなメッセージが表示されるので、それを参考に設定を行う。

===============================================================================

Some setup you must do manually if you haven't yet:

  1. Ensure you have defined default url options in your environments files. Here
     is an example of default_url_options appropriate for a development environment
     in config/environments/development.rb:

       config.action_mailer.default_url_options = { :host => 'localhost:3000' }

     In production, :host should be set to the actual host of your application.

  2. Ensure you have defined root_url to *something* in your config/routes.rb.
     For example:

       root :to => "home#index"

  3. Ensure you have flash messages in app/views/layouts/application.html.erb.
     For example:

       <p class="notice"><%= notice %></p>
       <p class="alert"><%= alert %></p>

  4. If you are deploying Rails 3.1+ on Heroku, you may want to set:

       config.assets.initialize_on_precompile = false

     On config/application.rb forcing your application to not access the DB
     or load models when precompiling your assets.

  5. You can copy Devise views (for customization) to your app by running:

       rails g devise:views

===============================================================================

User モデルを作成する

以下のように generator を実行。

$ rails g devise User
      invoke  active_record
      create    db/migrate/20130321033334_devise_create_users.rb
      create    app/models/user.rb
      invoke    test_unit
      create      test/unit/user_test.rb
      create      test/fixtures/users.yml
      insert    app/models/user.rb
       route  devise_for :users

続けて migrate を実行。

$ rake db:migrate


rootを設定する場合、以下のようにする

まずはルーティングの確認

$ bundle exec rake routes

config/routes.rbで以下のような形で追加を行う。（各自編集してください。）

  #deviseのルート設定の場合は以下のように指定
  devise_for :users
  devise_scope :user do
    authenticated :user do
      root :to => 'timelines#index', as: :authenticated_root
    end
    unauthenticated :user do
      root :to => 'devise/sessions#new', as: :unauthenticated_root
    end
  end

これで認証してる時としていない時で別々のルートを設定することができる。

/users/sign_up にアクセスしてみる

rails s でサーバを起動し、/users/sign_up にアクセスしてみてサインアップ画面が表示されればOK。
sign_up, sign_in, sign_out のリンクを layout に追加

app/views/layouts/application.html.erb に以下のコードを追加

<div id='user_nav'>
  <% if user_signed_in? %>
    Signed in as <%= current_user.email %>. <%= link_to "Sign out", destroy_user_session_path, :method => :delete %>
  <% else %>
    <%= link_to "Sign up", new_user_registration_path %> or
    <%= link_to "Sign in", new_user_session_path %>
  <% end %>
</div>

Rails casts (Ascii casts) に掲載されている例では :method => :delete が無く、devise 2.2.3 では正しく動作しなかった。
viewのカスタマイズ

$ rails g devise:views
      invoke  Devise::Generators::SharedViewsGenerator
      create    app/views/devise/shared
      create    app/views/devise/shared/_links.erb
      invoke  form_for
      create    app/views/devise/confirmations
      create    app/views/devise/confirmations/new.html.erb
      create    app/views/devise/passwords
      create    app/views/devise/passwords/edit.html.erb
      create    app/views/devise/passwords/new.html.erb
      create    app/views/devise/registrations
      create    app/views/devise/registrations/edit.html.erb
      create    app/views/devise/registrations/new.html.erb
      create    app/views/devise/sessions
      create    app/views/devise/sessions/new.html.erb
      create    app/views/devise/unlocks
      create    app/views/devise/unlocks/new.html.erb
      invoke  erb
      create    app/views/devise/mailer
      create    app/views/devise/mailer/confirmation_instructions.html.erb
      create    app/views/devise/mailer/reset_password_instructions.html.erb
      create    app/views/devise/mailer/unlock_instructions.html.erb
